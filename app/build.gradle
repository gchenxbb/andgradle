println " "
println "##################### app模块的 build.gradle 开始! "

apply plugin: 'com.android.application'

//android配置
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId rootProject.ext.applicationId
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
}

buildscript {
    println "首先执行app模块build.gradle的 buildscript 代码!!!!"
    repositories {
        maven {//引入自定义的插件，在外部repo目录下
            url uri('../repo')
        }
    }
    dependencies {
        classpath 'com.gradle.plugin:gradle_plugin:1.0.2'//组名+库名+版本号
    }
}

//引入插件1，名字在插件库的properties类型的名。
apply plugin: 'gradle.plugin'
//引入插件2
apply plugin: PluginImplTaskTwo

class PluginImplTaskTwo implements Plugin<Project> {

    private File zipFile;

    void apply(Project project) {
        println "PluginImplTaskTwo apply begin!"

        project.tasks.create('plugin_task_003') << {
            println "Hello gradle plugin_task_003！"
        }

        //自动执行任务
        project.task('plugin_task_004') {
            println "Hello gradle plugin task 004!"
        }

        //压缩两个文件的任务,{}内容自动执行，压缩过程点击右侧任务名
        zipFile = project.file("${project.projectDir}/zipbuildgradle.zip")
        Task plugin_task_005 = project.tasks.create("plugin_task_005", Jar) {
            destinationDir zipFile.parentFile
            archiveName zipFile.name
            println("任务5，压缩生成路径：$destinationDir")
            println("任务5，压缩名字：$archiveName")
            from("${project.projectDir}/build.gradle") {
                into "zip/x1"
            }
            from("${project.projectDir}/build.gradle") {
                into "zip/x2"
            }
        }
        project.afterEvaluate this.&afterProject
        println "PluginImplTaskTwo apply end!"
    }

    private void afterProject(Project project) {
        println("after project：$project.displayName,start")
        def deps = { variant ->
            println(variant.name)
            if (variant.name == 'debug') {
                Task task = project.tasks.findByName("compile${variant.name.capitalize()}JavaWithJavac")
                if (task) {
                    println(task.name)
                    //    task.dependsOn project.plugin_task_005
                }
            }
        }
        if (project.android.hasProperty("applicationVariants")) {
            project.android.applicationVariants.all deps
        }
        println("after project：$project.displayName,end")
    }
}

apply from: 'groovy.gradle'

println "##################### app模块的 build.gradle 结束! "
println ' '
